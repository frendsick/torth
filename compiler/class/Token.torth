include "std"

// Token(value: str, type: TokenType, location: Location)
ENUM Token.size 8 :
  Token.value       // str
  Token.type        // TokenType => int
  Token.location    // Location  => ptr
  Token.is_variable // bool
END

// Initialize Token from parameters
// Params: Token.value, Token.type, Token.location
// Return: Pointer to Token
function Token.init str int ptr -> ptr :
  // Allocate memory for Token
  Token.size malloc
  take token value type location in

  // Load the parameters to the allocated memory
  value     token Token.value       ptr+ str.store
  type      token Token.type        ptr+ int.store
  location  token Token.location    ptr+ ptr.store
  False     token Token.is_variable ptr+ bool.store
  token
end

// Get Token.value
// Params: Pointer to Token (PTR)
// Return: Token.value (STR)
function Token.get_value ptr -> str :
  str.load
end

// Get Token.type
// Params: Pointer to Token (PTR)
// Return: Token.type (TokenType => INT)
function Token.get_type ptr -> int :
  Token.type ptr+ int.load
end

// Get Token.location
// Params: Pointer to Token (PTR)
// Return: Token.location (Location => PTR)
function Token.get_location ptr -> ptr :
  Token.location ptr+ ptr.load
end

function Token.print ptr :
  "Token.value        => " puts
  dup Token.value     ptr+
  str.load puts "\n"  puts

  "Token.type         => " puts
  dup Token.type      ptr+
  int.load print "\n" puts

  Token.location ptr+ ptr.load
  Location.print
end
