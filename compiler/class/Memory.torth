// Memory(name: str, size: int, location: Location)
ENUM Memory.size 8 :
  Memory.name     // str
  Memory.size     // int
  Memory.location // Location => ptr
END

// Initialize Memory from parameters
// Params: Memory.name, Memory.size, Memory.location
// Return: Pointer to Memory
function Memory.init str int ptr -> ptr :
  // Allocate memory for Memory
  Memory.size malloc
  take mem name size location in

  // Load the parameters to the allocated memory
  name      mem Memory.name     ptr+ str.store
  size      mem Memory.size     ptr+ int.store
  location  mem Memory.location ptr+ ptr.store
  mem
end

// Get Memory.name
// Params: Pointer to Memory (PTR)
// Return: Memory.name (STR)
function Memory.get_name ptr -> str :
  str.load
end

// Get Memory.size
// Params: Pointer to Memory (PTR)
// Return: Memory.size (TokenType => INT)
function Memory.get_size ptr -> int :
  Memory.size ptr+ int.load
end

// Get Memory.location
// Params: Pointer to Memory (PTR)
// Return: Memory.location (Location => PTR)
function Memory.get_location ptr -> ptr :
  Memory.location ptr+ ptr.load
end

// Print Memory object contents to stdout
// Params: Pointer to Memory
// Return: None
function Memory.print ptr :
  take mem in
  "Memory.name        => "  puts
  mem Memory.get_name puts "\n" puts
  "Memory.size        => "  puts
  mem Memory.get_size print "\n" puts
  mem Memory.get_location Location.print
end
