include "std"
include "compiler/lex"
include "compiler/class/Op"

// Iterate over every Op in Program and print the contents of them
// Params: Pointer to Program (PTR)
// Return: None
function Program.print ptr :
  0 take index program in
   while index program list.len < do

    // Load Op at program[index]
    program list.first
    index ptr.size *
    ptr+ ptr.load

    // Print the loaded Op
    Op.print "\n" puts
    index 1 + index =
  done
end

// Get the Op at certain index
// Params: program (PTR), index (INT)
// Return: op (PTR)
function Program.op_at ptr int -> ptr :
  swap Op.size * ptr+ ptr.load
end

// Parse a word to Token and append it to Program
// Params: program (PTR), word (STR)
// Return: None
function Program.append_match ptr str -> :
  take program word in

  // Generate Token from the word
  word get_token_from_match

  // Generate Op from Token
  program list.len swap get_op_from_token

  // Append Op to Program
  program list.append
end
