include "std"
include "compiler/class/Signature"
include "compiler/class/Token"
include "compiler/class/Variable"
class Func
  name:str
  signature:Signature
  tokens:List[Token]
  variables:List[Variable]
  is_used:bool

  method init
    name:str
    signature:Signature
    tokens:List[Token]
    variables:List[Variable]
    is_used:bool
  -> Func :
    Func.size malloc cast(Func)
    take func in

    name      func Func->name
    signature func Func->signature
    tokens    func Func->tokens
    variables func Func->variables
    is_used   func Func->is_used
    func
  end

  method load ptr -> Func :
    ptr.load cast(Func)
  end

  method print self:Func :
    "Func.name      => "      puts
    self Func.name puts "\n"  puts

    "Func.signature => "      puts
    self Func.signature
    Signature.repr puts "\n"  puts

    "Func.tokens    => "      puts
    self Func.tokens cast(List)
    dup cast(List) List.len  // tokens.len
    0
    take
      index
      tokens.len
      tokens
    in

    while index tokens.len < do
      // Get the current Token
      index tokens List.nth Token.load

      // Print Token's value in single quotes
      "'"         puts
      Token.value puts
      "' "        puts
      index 1 + index =
    done
    "\n" puts
  end
endclass
