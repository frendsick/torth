include "std"

// Function(name: str, signature: Signature, tokens: List[Token], variables: List[Variable])
ENUM Function.size 8 :
  Function.name       // str
  Function.signature  // Signature
  Function.tokens     // List[Token]
  Function.variables  // List[Variable]
END

// Initialize Function from parameters
// Params: Function.name, Function.signature, Function.tokens, Function.variables
// Return: Pointer to Function
function Function.init str ptr ptr -> ptr :
  // Allocate memory for Function
  Function.size malloc
  take func name signature tokens in

  // Load the parameters to the allocated memory
  name      func Function.name       ptr+ str.store
  signature func Function.signature  ptr+ ptr.store
  tokens    func Function.tokens     ptr+ ptr.store
  List.init func Function.variables  ptr+ ptr.store
  func
end

// Get Function.get_name
// Params: Pointer to Function (PTR)
// Return: Function.name (STR)
function Function.get_name ptr -> str :
  str.load
end

// Get Function.get_signature
// Params: Pointer to Function (PTR)
// Return: Function.signature (PTR)
function Function.get_signature ptr -> ptr :
  Function.signature ptr+ ptr.load
end

// Get Function.get_tokens
// Params: Pointer to Function (PTR)
// Return: Function.tokens (PTR)
function Function.get_tokens ptr -> ptr :
  Function.tokens ptr+ ptr.load
end

function Function.get_variables ptr -> ptr :
  Function.variables ptr+ ptr.load
end

// Print Function name and Signature to stdout
// Params: Pointer to Function
// Return: None
function Function.print ptr :
  "Function.name      => "  puts
  dup Function.name         ptr+
  str.load puts "\n"        puts

  dup Function.signature ptr+ ptr.load
  Signature.print

  "Function.tokens    => "  puts
  Function.tokens ptr+
  ptr.load      // tokens
  dup List.len  // tokens.len
  0             // index
  take
    index
    tokens.len
    tokens
  in

  while index tokens.len < do
    // Get the tokens value
    tokens List.first
    index ptr.size * ptr+
    ptr.load str.load

    // Print each token in single quotes
    "'" puts puts "' " puts
    index 1 + index =
  done
  "\n\n" puts
end
