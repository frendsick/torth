include "std"
include "compiler/defs"
include "compiler/utils"
class Signature
  params:List
  returns:List

  method init param_types:List return_types:List -> Signature :
    Signature.size malloc cast_any
    take signature in

    param_types   signature Signature->params
    return_types  signature Signature->returns
    signature
  end

  method repr self:Signature -> str :
    self Signature.returns
    self Signature.params
    ""    str.copy
    dup   str.copy
    0
    take
      index
      params_repr
      returns_repr
      params
      returns
    in

    // Set empty Signature parts as None
    if params List.len 0 == do
      "None " params_repr =
    endif
    if returns List.len 0 == do
      "None" returns_repr =
    endif

    // Generate repr from Signature.params
    while index params List.len < do
      index params List.nth str.load " " str.cat
      params_repr swap str.cat params_repr =
      index 1 + index =
    done

    // Generate repr from Signature.returns
    0 index =
    while index returns List.len < do
      index returns List.nth str.load " " str.cat
      returns_repr swap str.cat returns_repr =
      index 1 + index =
    done
    params_repr "-> " str.cat
    returns_repr      str.cat
  end
endclass
