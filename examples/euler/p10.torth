// Problem 10: Summation of primes
// The sum of the primes below 10 is 2 + 3 + 5 + 7 = 17.
// Find the sum of all the primes below two million.
include "std"
const   MAX_PRIME 2000000   end
memory  sieve     MAX_PRIME end

// Params: prime, max_prime
// Return: None
function mark_multiples_to_sieve int int :
  dup dup * // prime*prime
  take curr orig max_prime in

  // for i in range(prime*prime, MAX_PRIME, prime)
  while curr max_prime < do
    // sieve[i] = True
    sieve curr ptr+ True uint8 swap uint8.store
    curr orig + curr =  // curr += orig
  done
end

// Params: max_prime
// Return: prime_sum
function summation_of_primes int -> int :
  2 3 + dup
  take index prime_sum max_prime in
  while index max_prime < do
    // If current number is prime add it to prime_sum
    if sieve index ptr+ uint8.load NULL == do
      prime_sum index + prime_sum = // prime_sum += index
      max_prime index mark_multiples_to_sieve
    endif
    
    // All primes except for 2 and 3 are 6nÂ±1
    if index 6 % 1 == do
      index 4 + index =
    else
      index 2 + index =
    endif
  done
  prime_sum
end

function main :
  MAX_PRIME summation_of_primes
  "The sum of primes below " puts MAX_PRIME putu ": " puts putu "\n" puts
end
