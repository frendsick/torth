include "std"

const DIVISORS_CAP 100 end

function get_triangle_number int -> int :
  dup while dup 0 > do
    // i-1 i-1 sum
    1 - dup rot + swap
  done drop
end

function get_number_of_divisors int -> int :
  0 take divisors in
  get_triangle_number
  if dup 1 > do
    1 // i
    while over over swap 1 + < do
      // triangle i
      if over over % 0 == do
        divisors 1 + divisors =
      endif
      1 +
    done drop
  else
    dup divisors =
  endif drop
  divisors
end

function highly_divisible_triangular_number -> int :
  if 100 DIVISORS_CAP < do
    "Calculating the triangular number with over " puts
    DIVISORS_CAP putu " divisors.\n" puts
    "This will take a while...\n" puts
  endif

  1 // Current natural number
  while True do
    1 while over over > do
      1 +
    done drop
    if dup get_number_of_divisors DIVISORS_CAP > do
      break
    endif
    1 +
  done get_triangle_number
end

function main :
  highly_divisible_triangular_number
  "The first triangular number to have over " puts
  DIVISORS_CAP putu " divisors: " puts putu "\n" puts
end
